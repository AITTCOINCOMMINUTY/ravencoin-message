{"mappings":";;;;;;;;;;;;AAAA;;;AACA,MAAM,uCAAiB;AAGhB,SAAS,0CAAK,OAAe,EAAE,UAAe,EAAE,aAAa,IAAI,EAAE;IACxE,MAAM,YAAY,CAAA,GAAA,iDAAa,EAAE,IAAI,CACnC,SACA,YACA,YACA;IAGF,OAAO,UAAU,QAAQ,CAAC;AAC5B;AACO,SAAS,0CACd,OAAe,EACf,OAAe,EACf,SAAiB,EACjB;IACA,MAAM,IAAI,iCAAO,IAAI,CAAC,SAAS,QAAQ,CAAC;IACxC,MAAM,SAAS,CAAA,GAAA,iDAAa,EAAE,MAAM,CAAC,GAAG,SAAS,WAAW;IAC5D,OAAO;AACT","sources":["index.ts"],"sourcesContent":["import bitcoinMessage from \"bitcoinjs-message\";\r\nconst MESSAGE_PREFIX = \"\\x16Raven Signed Message:\\n\";\r\n\r\n/** returns a base64 encoded string representation of the signature */\r\nexport function sign(message: string, privateKey: any, compressed = true) {\r\n  const signature = bitcoinMessage.sign(\r\n    message,\r\n    privateKey,\r\n    compressed,\r\n    MESSAGE_PREFIX\r\n  );\r\n\r\n  return signature.toString(\"base64\");\r\n}\r\nexport function verifyMessage(\r\n  message: string,\r\n  address: string,\r\n  signature: string\r\n) {\r\n  const m = Buffer.from(message).toString(\"ascii\");\r\n  const result = bitcoinMessage.verify(m, address, signature, MESSAGE_PREFIX);\r\n  return result;\r\n}\r\n"],"names":[],"version":3,"file":"main.js.map"}